//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by Fernflower decompiler)
//

package com.qualcomm.ftcrobotcontroller.opmodes;

import com.qualcomm.ftcrobotcontroller.opmodes.PushBotTelemetrySensors;

public class PushBotManualSensors extends PushBotTelemetrySensors {
    private boolean v_raise_arm_automatically = false;

    public PushBotManualSensors() {
    }

    public void loop() {
        float l_gp1_left_stick_y = -this.gamepad1.left_stick_y;
        float l_left_drive_power = this.scale_motor_power(l_gp1_left_stick_y);
        float l_gp1_right_stick_y = -this.gamepad1.right_stick_y;
        float l_right_drive_power = this.scale_motor_power(l_gp1_right_stick_y);
        this.set_drive_power((double)l_left_drive_power, (double)l_right_drive_power);
        if(this.gamepad2.y && !this.v_raise_arm_automatically) {
            this.v_raise_arm_automatically = true;
        }

        float l_gp2_left_stick_y = -this.gamepad2.left_stick_y;
        float l_arm_command = 0.0F;
        if(this.v_raise_arm_automatically) {
            l_arm_command = 1.0F;
            if(this.is_touch_sensor_pressed() || (double)Math.abs(l_gp2_left_stick_y) > 0.8D) {
                l_arm_command = 0.0F;
                this.v_raise_arm_automatically = false;
            }
        } else {
            this.v_raise_arm_automatically = false;
            l_arm_command = this.scale_motor_power(l_gp2_left_stick_y);
        }

        this.m_left_arm_power((double)l_arm_command);
        if(this.gamepad2.x) {
            this.m_hand_position(this.a_hand_position() + 0.05D);
        } else if(this.gamepad2.b) {
            this.m_hand_position(this.a_hand_position() - 0.05D);
        }

        this.update_telemetry();
        this.telemetry.addData("18", "Raise Arm: " + this.v_raise_arm_automatically);
        this.telemetry.addData("19", "Left arm command: " + l_arm_command);
    }
}
