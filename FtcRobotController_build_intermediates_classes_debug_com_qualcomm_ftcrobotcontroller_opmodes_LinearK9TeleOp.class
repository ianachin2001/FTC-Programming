//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by Fernflower decompiler)
//

package com.qualcomm.ftcrobotcontroller.opmodes;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.DcMotor.Direction;
import com.qualcomm.robotcore.util.Range;

public class LinearK9TeleOp extends LinearOpMode {
    double neckPosition;
    double jawPosition;
    double neckDelta = 0.01D;
    DcMotor motorRight;
    DcMotor motorLeft;
    Servo neck;
    Servo jaw;

    public LinearK9TeleOp() {
    }

    public void runOpMode() throws InterruptedException {
        this.motorLeft = (DcMotor)this.hardwareMap.dcMotor.get("motor_1");
        this.motorRight = (DcMotor)this.hardwareMap.dcMotor.get("motor_2");
        this.neck = (Servo)this.hardwareMap.servo.get("servo_1");
        this.jaw = (Servo)this.hardwareMap.servo.get("servo_6");
        this.motorLeft.setDirection(Direction.REVERSE);
        this.neckPosition = 0.5D;
        this.waitForStart();

        while(this.opModeIsActive()) {
            float throttle = -this.gamepad1.left_stick_y;
            float direction = this.gamepad1.left_stick_x;
            float right = throttle - direction;
            float left = throttle + direction;
            right = Range.clip(right, -1.0F, 1.0F);
            left = Range.clip(left, -1.0F, 1.0F);
            this.motorRight.setPower((double)right);
            this.motorLeft.setPower((double)left);
            if(this.gamepad1.y) {
                this.neckPosition -= this.neckDelta;
            }

            if(this.gamepad1.a) {
                this.neckPosition += this.neckDelta;
            }

            this.neckPosition = Range.clip(this.neckPosition, 0.0D, 1.0D);
            this.jawPosition = 1.0D - Range.scale((double)this.gamepad1.right_trigger, 0.0D, 1.0D, 0.3D, 1.0D);
            this.neck.setPosition(this.neckPosition);
            this.jaw.setPosition(this.jawPosition);
            this.telemetry.addData("Text", "K9TeleOp");
            this.telemetry.addData(" left motor", this.motorLeft.getPower());
            this.telemetry.addData("right motor", this.motorRight.getPower());
            this.telemetry.addData("neck", this.neck.getPosition());
            this.telemetry.addData("jaw", this.jaw.getPosition());
            this.waitOneFullHardwareCycle();
        }

    }
}
